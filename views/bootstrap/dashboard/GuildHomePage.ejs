<html>
  <%- include("../../EJScomp/bootstrap/nav", {user: user}); %>
  <title>PB - <%- guild.name %> Dashboard</title>
  <%- include("../../EJScomp/bootstrap/secondNavDash", {user: user, guild:
  guild}); %>
  <!-- This is Default Page when they log in. The Configuration Page. It seems suitable for now but subject to change. -->
  <% Bot.serverConfig.ensure(guild.id, { serverID: guild.id, prefix: "$",
  welcomeMessageEnabled: true, xpSystem: true, queue: {}, welcomeChannel:
  "None", twitchStream: [], customCommands: [ { name: "test1", msg: "test1Resp"
  }, { name: "test2", msg: "test2Resp" } ] });%>
  <section class="config">
    <h1>Configuration</h1>
    <p>
      This is your configuration Channel for the guild:
      <b><%- guild.name %></b>! You can configure the settings to how you'd
      like.
    </p>
    <table class="table">
      <thead>
        <tr>
          <td
            class="config"
            id="id">
            Server ID
          </td>
          <td class="config" id="prefix" data-toggle="modal"data-target="#openMenu" data-book-id="Prefix">Prefix</td>
          <td class="config" id="welmsg">
            Welcome MSG enabled?
          </td>
          <td class="config" id="xpSys" onclick="openMenu(this)">
            XP System Enabled?
          </td>
          <td class="config">Mod-Log Channel</td>
        </tr>
      </thead>
      <tbody>
        <tr id="aha">
          <td><%- Bot.serverConfig.get(guild.id, "serverID")%></td>
          <td><%- Bot.serverConfig.get(guild.id, "prefix")%></td>
          <td><%- Bot.serverConfig.get(guild.id, "welcomeMessageEnabled")%></td>
          <td><%- Bot.serverConfig.get(guild.id, "xpSystem") %></td>
          <td>
            <% if(!Bot.serverConfig.get(guild.id, "modlog")){f = "None" }else{ f
            =`# ${Bot.channels.find("id", Bot.serverConfig.get(guild.id,
            "modlog")).name}` } %> <%- f %>
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <div
    class="modal fade bd-example-modal-sm"
    tabindex="-1"
    role="dialog"
    id="openMenu"
    aria-labelledby="mySmallModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="m-title" style="color: #6d6d6d">
            Are you sure?
          </h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body" style="color: #6d6d6d" id="m-body">
          Loading . . .
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">
            Close
          </button>
          <button type="button" class="btn btn-success" data-dismiss="modal"
            onclick="changePrefix(document.getElementById('newPrefix'))">
            Update
          </button>
        </div>
      </div>
    </div>
</html>
<script>
 var socket = io.connect("<%- env.server %>");
  function changePrefix(p) {
  if(!p.value) {
    return;
  } else {
    socket.emit("changePrefix", {
      guild: `<%- guild.id %>`,
      user: `<%- user.id %>`,
      prefix: p.value
    });
    window.location.reload();
  }
  }
  $("#openMenu").on("show.bs.modal", function (e) {
      var bookId = $(e.relatedTarget).data("book-id");
      if(bookId === "Prefix") {
        $(e.currentTarget).find("#m-body").text("");
        $(e.currentTarget).find("#m-body").append("<input placeholder=\"$\" id=\"newPrefix\"></input>")
      }
      $(e.currentTarget)
        .find("#m-title")
        .text(`Change ${bookId}`);
    });
    
  function openMenu() {
    document.getElementById("myForm").style.display = "block";
  }

  function closeMenu() {
    document.getElementById("myForm").style.display = "none";
  }
</script>
<style>
  .open-button {
    background-color: #555;
    color: white;
    padding: 16px 20px;
    border: none;
    cursor: pointer;
    opacity: 0.8;
    position: fixed;
    bottom: 23px;
    right: 28px;
    width: 280px;
  }
  #aha > td {
    text-align: center;
  }
  /* The popup form - hidden by default */
  .form-popup {
    display: none;
    position: fixed;
    bottom: 0;
    right: 15px;
    border: 3px solid #f1f1f1;
    z-index: 9;
  }
  #prefix:hover {
    cursor: pointer;
    color: grey;
  }
  /* Add styles to the form container */
  .form-container {
    max-width: 300px;
    padding: 10px;
    background-color: white;
  }

  /* Full-width input fields */
  .form-container input[type="text"],
  .form-container input[type="password"] {
    width: 100%;
    padding: 15px;
    margin: 5px 0 22px 0;
    border: none;
    background: #f1f1f1;
  }

  /* When the inputs get focus, do something */
  .form-container input[type="text"]:focus,
  .form-container input[type="password"]:focus {
    background-color: #ddd;
    outline: none;
  }

  /* Set a style for the submit/login button */
  .form-container .btn {
    background-color: #4caf50;
    color: white;
    padding: 16px 20px;
    border: none;
    cursor: pointer;
    width: 100%;
    margin-bottom: 10px;
    opacity: 0.8;
  }

  /* Add a red background color to the cancel button */
  .form-container .cancel {
    background-color: red;
  }

  /* Add some hover effects to buttons */
  .form-container .btn:hover,
  .open-button:hover {
    opacity: 1;
  }
</style>
